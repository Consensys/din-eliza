name: Create and publish a Docker image

on:
  pull_request:
    branches:
      - "main"
#   push:
#     branches:
#       - "main"
#     tags:
#       - release-*.*

permissions:
  id-token: write
  contents: read
  pull-requests: read

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=pr,suffix=-{{sha}}
            type=raw,value={{branch}}-{{sha}},enable={{is_default_branch}}
            type=match,pattern=\d+.\d+.\d+,group=0

    #   - name: Configure AWS Credentials
    #     uses: aws-actions/configure-aws-credentials@v4
    #     with:
    #       role-to-assume: ${{ env.ECR_ROLE }}
    #       aws-region: ${{ env.AWS_REGION }}

    #   - name: Login to ECR
    #     uses: docker/login-action@v3
    #     with:
    #       registry: ${{ env.REGISTRY }}

      - name: Set up docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

    #   - name: GitHub App Install Token
    #     id: github-app-token
    #     uses: getsentry/action-github-app-token@v2
    #     with:
    #       app_id: ${{ secrets.GH_APP_ID }}
    #       private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}

    #   - name: Repository Dispatch
    #     uses: peter-evans/repository-dispatch@v2
    #     with:
    #       token: ${{ steps.github-app-token.outputs.token }}
    #       repository: ConsenSys/security-provider-aggregator-portal-argocd
    #       event-type: image-automation-${{ matrix.KUSTOMIZE_IMAGE_NAME }}-${{ env.ENVIRONMENT }}
    #       client-payload: '{"image_sha": "${{ github.sha }}", "image_name":"${{ env.IMAGE_NAME_PREFIX }}${{ matrix.KUSTOMIZE_IMAGE_NAME }}", "image_repo":"${{ env.IMAGE_REPO }}", "image_tag": "${{ steps.meta.outputs.version }}", "environment":"${{ needs.vars.outputs.environment }}", "kustomize_image_name":"${{ matrix.KUSTOMIZE_IMAGE_NAME }}"}'